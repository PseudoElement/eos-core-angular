variables:
  #CI_DEBUG_TRACE: "true"
  TMP_WORKSPACE: ${CI_PROJECT_PATH_SLUG}_${CI_BUILD_REF_SLUG}_${CI_PIPELINE_ID}
  SERVER_FOLDER: $TFS_BUILD_DROPS_PATH
  LOCAL_FOLDER: tmp_for_map
  BUILD_DROP_NAME: ${CI_PROJECT_PATH_SLUG}_${CI_BUILD_REF_SLUG}
  #ARTIFACTS_URL: ${CI_PROJECT_URL}/-/jobs/${CI_JOB_ID}/artifacts/download
  ARTIFACTS_URL: https://git.eos.ru/api/v4/projects/${CI_PROJECT_ID}/jobs/${CI_JOB_ID}/artifacts
  COMMENT_TEXT: "${GITLAB_USER_NAME}: ${CI_COMMIT_MESSAGE}\n${CI_PROJECT_URL}/commit/${CI_COMMIT_SHA}"


stages:
  - build
  - cleanup


## build stage

build_job:
  stage: build
  tags:
    - ruby
    - compass
  #cache:
  #  paths:
  #    - node_modules/
  before_script:
    - export BUILD_DROP_LOCAL_PATH=$LOCAL_FOLDER/$BUILD_DROP_NAME
    - export BUILD_URI_PATH=$BUILD_DROP_LOCAL_PATH/buildUri
  script:
    - 'npm install'
    - 'npm run build-prod'

    - 'echo build drops path: $TFS_BUILD_DROPS_PATH'
    - 'echo workspace: $TMP_WORKSPACE'
    - 'echo server folder: $SERVER_FOLDER'
    - 'echo local folder: ${PWD}/$LOCAL_FOLDER'
    
    - 'rm -r -f  $LOCAL_FOLDER/*'
    - '$TF workspace -new $TMP_WORKSPACE'
    - '$TF workfold -map $SERVER_FOLDER $LOCAL_FOLDER -workspace:$TMP_WORKSPACE'
    - '$TF get $BUILD_URI_PATH'
    
    - 'if [ -f "${BUILD_URI_PATH}" ]; then $TF checkout "${BUILD_URI_PATH}"; fi'
    - 'mkdir -p $BUILD_DROP_LOCAL_PATH'
    - 'echo $ARTIFACTS_URL> "${BUILD_URI_PATH}"'
    - '$TF add "${BUILD_URI_PATH}" || true'
    - '$TF checkin "${BUILD_URI_PATH}" -comment:"${COMMENT_TEXT}" -override:"Automated Build Process" -recursive'
  only:
    - /^release/.*$/@dev/delo/classif
    - tags
  artifacts:
    expire_in: 1 week
    paths:
      - dist/

## cleanup stage

cleanup_job:
  stage: cleanup
  tags:
    - ruby
    - compass
  script:
    - 'echo rm -r -f  $LOCAL_FOLDER'
    - '$TF workspace -delete $TMP_WORKSPACE'
  only:
    - /^release/.*$/@dev/delo/classif
    - tags
  when: always
